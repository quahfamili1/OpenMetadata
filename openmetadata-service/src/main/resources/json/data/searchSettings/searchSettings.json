{
  "globalSettings": {
    "enableAccessControl": false,
    "maxAggregateSize": 10000,
    "maxResultHits": 10000,
    "maxAnalyzedOffset": 1000,
    "aggregations": [
      {
        "name": "serviceType",
        "type": "terms",
        "field": "serviceType"
      },
      {
        "name": "service.displayName.keyword",
        "type": "terms",
        "field": "service.displayName.keyword"
      },
      {
        "name": "entityType",
        "type": "terms",
        "field": "entityType"
      },
      {
        "name": "tier.tagFQN",
        "type": "terms",
        "field": "tier.tagFQN"
      },
      {
        "name": "owners.displayName.keyword",
        "type": "terms",
        "field": "owners.displayName.keyword"
      },
      {
        "name": "domain.displayName.keyword",
        "type": "terms",
        "field": "domain.displayName.keyword"
      },
      {
        "name": "tags.tagFQN",
        "type": "terms",
        "field": "tags.tagFQN"
      },
      {
        "name": "certification.tagLabel.tagFQN",
        "type": "terms",
        "field": "certification.tagLabel.tagFQN"
      },
      {
        "name": "database.name.keyword",
        "type": "terms",
        "field": "database.name.keyword"
      },
      {
        "name": "databaseSchema.name.keyword",
        "type": "terms",
        "field": "databaseSchema.name.keyword"
      },
      {
        "name": "database.displayName",
        "type": "terms",
        "field": "database.displayName"
      },
      {
        "name": "databaseSchema.displayName",
        "type": "terms",
        "field": "databaseSchema.displayName"
      }
    ],
    "highlightFields": [
      "name",
      "displayName",
      "description"
    ],
    "termBoosts": [
      {
        "field": "tier.tagFQN",
        "value": "Tier.Tier1",
        "boost": 50
      },
      {
        "field": "tier.tagFQN",
        "value": "Tier.Tier2",
        "boost": 30
      },
      {
        "field": "tier.tagFQN",
        "value": "Tier.Tier3",
        "boost": 10
      }
    ],
    "fieldValueBoosts": [
      {
        "field": "usageSummary.weeklyStats.count",
        "factor": 4.0,
        "modifier": "sqrt",
        "missing": 1
      },
      {
        "field": "totalVotes",
        "factor": 2.0,
        "modifier": "sqrt",
        "missing": 0
      },
      {
        "field": "usageSummary.weeklyStats.percentileRank",
        "factor": 0.05,
        "modifier": "none",
        "missing": 0
      }
    ]
  },
  "assetTypeConfigurations": [
    {
      "assetType": "database",
      "searchFields": [
        {
          "field": "displayName.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        }
      ],
      "highlightFields": [
        "name",
        "description",
        "displayName"
      ],
      "aggregations": [
      ],
      "scoreMode": "sum",
      "boostMode": "multiply"
    },
    {
      "assetType": "databaseSchema",
      "searchFields": [
        {
          "field": "displayName.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        }
      ],
      "highlightFields": [
        "name",
        "description",
        "displayName"
      ],
      "aggregations": [
      ],
      "scoreMode": "sum",
      "boostMode": "multiply"
    },
    {
      "assetType": "table",
      "searchFields": [
        {
          "field": "displayName.keyword",
          "boost": 20.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "columns.name.keyword",
          "boost": 2.0
        },
        {
          "field": "columns.displayName.keyword",
          "boost": 2.0
        },
        {
          "field": "columns.children.name.keyword",
          "boost": 1.0
        },
        {
          "field": "columnNamesFuzzy",
          "boost": 1.5
        },
        {
          "field": "tags.tagFQN.text",
          "boost": 5.0
        }
      ],
      "aggregations": [
        {
          "name": "database.displayName.keyword",
          "type": "terms",
          "field": "database.displayName.keyword"
        },
        {
          "name": "databaseSchema.displayName.keyword",
          "type": "terms",
          "field": "databaseSchema.displayName.keyword"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "description",
        "displayName"
      ],
      "fieldValueBoosts": [
        {
          "field": "usageSummary.monthlyStats.count", 
          "factor": 3.0,
          "modifier": "log1p",
          "missing": 0
        },
        {
          "field": "usageSummary.monthlyStats.percentileRank",
          "factor": 0.1,
          "modifier": "none",
          "missing": 0
        }
      ]
    },
    {
      "assetType": "storedProcedure",
      "searchFields": [
        {
          "field": "displayName.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        }
      ],
      "aggregations": [
        {
          "name": "database.displayName.keyword",
          "type": "terms",
          "field": "database.displayName.keyword"
        },
        {
          "name": "databaseSchema.displayName.keyword",
          "type": "terms",
          "field": "databaseSchema.displayName.keyword"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "description",
        "displayName"
      ]
    },
    {
      "assetType": "query",
      "searchFields": [
        {
          "field": "displayName.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "queryText",
          "boost": 5.0
        },
        {
          "field": "queryText.ngram",
          "boost": 1.0
        }
      ],
      "aggregations": [
        {
          "name": "queryType",
          "type": "terms",
          "field": "queryType"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "description",
        "displayName"
      ]
    },
    {
      "assetType": "topic",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "messageSchema.schemaFields.name.keyword",
          "boost": 1.0
        },
        {
          "field": "messageSchema.schemaFields.children.name.keyword",
          "boost": 1.0
        },
        {
          "field": "fieldNamesFuzzy",
          "boost": 1.5
        }
      ],
      "aggregations": [
        {
          "name": "messageSchema.schemaFields.name.keyword",
          "type": "terms",
          "field": "messageSchema.schemaFields.name.keyword"
        },
        {
          "name": "fieldNames",
          "type": "terms",
          "field": "fieldsNames"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description"
      ]
    },
    {
      "assetType": "dashboard",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "charts.name",
          "boost": 2.0
        },
        {
          "field": "charts.description",
          "boost": 2.0
        },
        {
          "field": "messageSchema.schemaFields.description",
          "boost": 1.0
        }
      ],
      "aggregations": [
        {
          "name": "serviceType",
          "type": "terms",
          "field": "serviceType"
        },
        {
          "name": "service.displayName.keyword",
          "type": "terms",
          "field": "service.displayName.keyword"
        },
        {
          "name": "tier.tagFQN",
          "type": "terms",
          "field": "tier.tagFQN"
        },
        {
          "name": "certification.tagLabel.tagFQN",
          "type": "terms",
          "field": "certification.tagLabel.tagFQN"
        },
        {
          "name": "owners.displayName.keyword",
          "type": "terms",
          "field": "owners.displayName.keyword"
        },
        {
          "name": "domain.displayName.keyword",
          "type": "terms",
          "field": "domain.displayName.keyword"
        },
        {
          "name": "tags.tagFQN",
          "type": "terms",
          "field": "tags.tagFQN"
        },
        {
          "name": "dataModels.displayName.keyword",
          "type": "terms",
          "field": "dataModels.displayName.keyword"
        },
        {
          "name": "charts.displayName.keyword",
          "type": "terms",
          "field": "charts.displayName.keyword"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description",
        "charts.name"
      ]
    },
    {
      "assetType": "dashboardDataModel",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "columns.name.keyword",
          "boost": 10.0
        },
        {
          "field": "columnNamesFuzzy",
          "boost": 1.5
        }
      ],
      "aggregations": [
        {
          "name": "dataModelType",
          "type": "terms",
          "field": "dataModelType"
        },
        {
          "name": "columns.name.keyword",
          "type": "terms",
          "field": "columns.name.keyword"
        },
        {
          "name": "columnNames",
          "type": "terms",
          "field": "columnNames"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description",
        "charts.name"
      ]
    },
    {
      "assetType": "pipeline",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "tasks.name",
          "boost": 8.0
        },
        {
          "field": "tasks.description",
          "boost": 1.0
        }
      ],
      "aggregations": [
        {
          "name": "tasks.displayName.keyword",
          "type": "terms",
          "field": "tasks.displayName.keyword"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description",
        "tasks.name",
        "tasks.description"
      ]
    },
    {
      "assetType": "mlmodel",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "mlFeatures.name",
          "boost": 8.0
        },
        {
          "field": "mlFeatures.description",
          "boost": 1.0
        }
      ],
      "aggregations": [
        {
          "name": "mlFeatures.name.keyword",
          "type": "terms",
          "field": "mlFeatures.name.keyword"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description",
        "mlFeatures.name",
        "mlFeatures.description"
      ]
    },
    {
      "assetType": "searchIndex",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "mlFeatures.name",
          "boost": 8.0
        },
        {
          "field": "mlFeatures.description",
          "boost": 1.0
        }
      ],
      "aggregations": [
        {
          "name": "mlFeatures.name.keyword",
          "type": "terms",
          "field": "mlFeatures.name.keyword"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description",
        "mlFeatures.name",
        "mlFeatures.description"
      ]
    },
    {
      "assetType": "container",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "dataModel.columns.name",
          "boost": 8.0
        },
        {
          "field": "dataModel.columns.name.keyword",
          "boost": 10.0
        },
        {
          "field": "columnNamesFuzzy",
          "boost": 1.5
        }
      ],
      "aggregations": [
        {
          "name": "columnNames",
          "type": "terms",
          "field": "columnNames"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description",
        "dataModel.columns.name",
        "dataModel.columns.description",
        "dataModel.columns.children.name"
      ]
    },
    {
      "assetType": "apiEndpoint",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "response_field_namesFuzzy",
          "boost": 1.5
        },
        {
          "field": "request_field_namesFuzzy",
          "boost": 1.5
        },
        {
          "field": "responseSchema.schemaFields.name.keyword",
          "boost": 8.0
        },
        {
          "field": "responseSchema.schemaFields.children.keyword",
          "boost": 5.0
        },
        {
          "field": "requestSchema.schemaFields.name.keyword",
          "boost": 8.0
        },
        {
          "field": "requestSchema.schemaFields.children.keyword",
          "boost": 5.0
        }
      ],
      "aggregations": [
        {
          "name": "responseSchema.schemaFields.name",
          "type": "terms",
          "field": "responseSchema.schemaFields.name.keyword"
        },
        {
          "name": "requestSchema.schemaFields.name",
          "type": "terms",
          "field": "requestSchema.schemaFields.name.keyword"
        },
        {
          "name": "fieldNames",
          "type": "terms",
          "field": "fieldsNames"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description"
      ]
    },
    {
      "assetType": "domain",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        }
      ],
      "aggregations": [
        {
          "name": "fqnParts_agg",
          "type": "terms",
          "field": "fqnParts"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description"
      ]
    },
    {
      "assetType": "dataProduct",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        }
      ],
      "aggregations": [
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description"
      ]
    },
    {
      "assetType": "tag",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "classification.name",
          "boost": 7.0
        },
        {
          "field": "classification.displayName",
          "boost": 7.0
        }
      ],
      "aggregations": [
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description"
      ]
    },
    {
      "assetType": "glossaryTerm",
      "searchFields": [
        {
          "field": "name.keyword",
          "boost": 10.0
        },
        {
          "field": "name",
          "boost": 10.0
        },
        {
          "field": "name.ngram",
          "boost": 1.0
        },
        {
          "field": "displayName",
          "boost": 10.0
        },
        {
          "field": "displayName.ngram",
          "boost": 1.0
        },
        {
          "field": "description",
          "boost": 2.0
        },
        {
          "field": "fullyQualifiedName",
          "boost": 5.0
        },
        {
          "field": "fqnParts",
          "boost": 5.0
        },
        {
          "field": "synonyms",
          "boost": 5.0
        },
        {
          "field": "synonyms.ngram",
          "boost": 1.0
        },
        {
          "field": "glossary.name",
          "boost": 5.0
        },
        {
          "field": "glossary.displayName",
          "boost": 5.0
        }
      ],
      "aggregations": [
        {
          "name": "glossary.name.keyword",
          "type": "terms",
          "field": "glossary.name.keyword"
        },
        {
          "name": "fqnParts_agg",
          "type": "terms",
          "field": "fqnParts"
        },
        {
          "name": "status",
          "type": "terms",
          "field": "status"
        }
      ],
      "scoreMode": "sum",
      "boostMode": "multiply",
      "highlightFields": [
        "name",
        "displayName",
        "description"
      ]
    }
  ],
  "defaultConfiguration": {
    "assetType": "default",
    "searchFields": [
      {
        "field": "name.keyword",
        "boost": 10.0
      },
      {
        "field": "name",
        "boost": 10.0
      },
      {
        "field": "name.ngram",
        "boost": 1.0
      },
      {
        "field": "displayName",
        "boost": 10.0
      },
      {
        "field": "displayName.ngram",
        "boost": 1.0
      },
      {
        "field": "description",
        "boost": 2.0
      },
      {
        "field": "fullyQualifiedName",
        "boost": 5.0
      },
      {
        "field": "fqnParts",
        "boost": 5.0
      }
    ],
    "highlightFields": [],
    "aggregations": []
  },
  "allowedFields": [
    {
      "entityType": "database",
      "fields": [
        {
          "name": "displayName.keyword",
          "description": "Exact match on the database display name. Use this for precise name searches where the entire name must match exactly."
        },
        {
          "name": "name",
          "description": "Standard text analysis on database name, supporting basic tokenization and stemming for flexible matching."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on database name using n-grams. This helps users find databases when they only remember part of the name."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable database name with basic tokenization and stemming."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on displayName, enabling searches with incomplete display name information."
        },
        {
          "name": "description",
          "description": "Full-text search on database descriptions to find databases based on their documented purpose or content."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the database to find specific databases within the hierarchy."
        },
        {
          "name": "fqnParts",
          "description": "Search on individual parts of the fully qualified name, allowing more flexible matching on hierarchical components."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with database."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with database."
        }
      ]
    },
    {
      "entityType": "databaseSchema",
      "fields": [
        {
          "name": "displayName.keyword",
          "description": "Exact match on the schema display name for precise name lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on schema name, supporting basic tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on schema name using n-grams. Helps find schemas with partial name information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable schema name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on displayName for flexible searching with incomplete terms."
        },
        {
          "name": "description",
          "description": "Full-text search on schema descriptions to find schemas based on their documented purpose."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the schema including the database component."
        },
        {
          "name": "fqnParts",
          "description": "Search on individual parts of the fully qualified name for more flexible hierarchical matching."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with database schema."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with database schema."
        }
      ]
    },
    {
      "entityType": "table",
      "fields": [
        {
          "name": "displayName.keyword",
          "description": "Exact match on the table display name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on table name, supporting basic tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on table name using n-grams. Helps users find tables when they remember only parts of names."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable table name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on displayName for more flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on table descriptions to find tables based on their documented purpose or contents."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name including database and schema components."
        },
        {
          "name": "fqnParts",
          "description": "Search on individual parts of the fully qualified name to match hierarchy components."
        },
        {
          "name": "columns.name.keyword",
          "description": "Exact match on column names within tables. Enables finding tables containing specific columns."
        },
        {
          "name": "columns.displayName.keyword",
          "description": "Exact match on column display names. Useful for finding tables with columns having specific user-friendly names."
        },
        {
          "name": "columns.children.name.keyword",
          "description": "Search for nested columns within complex data types. Helps find tables with specific nested fields."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find tables with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding tables by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified tables by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with table."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with table."
        }
      ]
    },
    {
      "entityType": "storedProcedure",
      "fields": [
        {
          "name": "displayName.keyword",
          "description": "Exact match on stored procedure display name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on stored procedure name with basic tokenization."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on stored procedure name using n-grams for flexible searches."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable stored procedure name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for finding procedures with partial name information."
        },
        {
          "name": "description",
          "description": "Full-text search on stored procedure descriptions for finding by purpose or functionality."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name including database and schema."
        },
        {
          "name": "fqnParts",
          "description": "Search on individual parts of the hierarchical name for flexible matching."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find storedProcedures with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding storedProcedures by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified storedProcedures by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with stored procedure."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with stored procedure."
        }
      ]
    },
    {
      "entityType": "query",
      "fields": [
        {
          "name": "displayName.keyword",
          "description": "Exact match on the query display name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on query name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on query name for finding queries with partial name information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable query name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible search."
        },
        {
          "name": "description",
          "description": "Full-text search on query descriptions to find by purpose or functionality."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the query."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "queryText",
          "description": "Search within the actual SQL query text to find queries with specific SQL patterns, table references, or functions."
        },
        {
          "name": "queryText.ngram",
          "description": "Partial matching on query text to find queries containing specific SQL fragments."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with query."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with query."
        }
      ]
    },
    {
      "entityType": "topic",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on topic name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on topic name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on topic name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable topic name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on topic descriptions to find by purpose or content."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the topic."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "messageSchema.schemaFields.name",
          "description": "Search on field names in the topic's message schema to find topics with specific data fields."
        },
        {
          "name": "messageSchema.schemaFields.name.keyword",
          "description": "Exact match on schema field names for precise field lookups."
        },
        {
          "name": "messageSchema.schemaFields.description",
          "description": "Search within field descriptions in the message schema to find topics with fields serving specific purposes."
        },
        {
          "name": "messageSchema.schemaFields.children.name",
          "description": "Search on nested field names within complex schema structures."
        },
        {
          "name": "messageSchema.schemaFields.children.name.keyword",
          "description": "Exact match on nested field names for precise lookups of nested structures."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find topics with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding topics by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified topics by partial certification name."
        },
        {
          "name": "messageSchema.schemaFields.tags.tagFQN.text",
          "description": "Search within parts of schema field tag names. Helps find topics with schema fields tagged with specific terms."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find topics with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding topics by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified topics by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with topic."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with topic."
        }
      ]
    },
    {
      "entityType": "dashboard",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on dashboard name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on dashboard name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on dashboard name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable dashboard name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on dashboard descriptions to find by purpose or content."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the dashboard."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "charts.name",
          "description": "Search on the names of charts included in the dashboard to find dashboards containing specific visualizations."
        },
        {
          "name": "charts.description",
          "description": "Search on chart descriptions to find dashboards with charts serving specific purposes."
        },
        {
          "name": "messageSchema.schemaFields.description",
          "description": "Search within schema field descriptions to find dashboards with data fields serving specific purposes."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find dashboards with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding dashboards by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified dashboards by partial certification name."
        },
        {
          "name": "charts.tags.tagFQN.text",
          "description": "Search within parts of chart tag names. Helps find dashboards with charts tagged with specific terms."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find dashboards with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding dashboards by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified dashboards by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with dashboard."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with dashboard."
        }
      ]
    },
    {
      "entityType": "dashboardDataModel",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on data model name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on data model name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on data model name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable data model name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on data model descriptions to find by purpose or content."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the data model."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "columns.name.keyword",
          "description": "Exact match on column names in the data model for finding models with specific fields."
        },
        {
          "name": "columns.name",
          "description": "Standard text analysis on column names in the data model."
        },
        {
          "name": "columns.displayName",
          "description": "Search on human-readable column names to find data models with fields having specific display names."
        },
        {
          "name": "columns.description",
          "description": "Search on column descriptions to find data models with fields serving specific purposes."
        },
        {
          "name": "columns.children.name",
          "description": "Search on nested field names within complex column structures."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find dashboard data models with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding dashboard data models by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified dashboard data models by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with dashboard data model."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with dashboard data model."
        }
      ]
    },
    {
      "entityType": "pipeline",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on pipeline name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on pipeline name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on pipeline name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable pipeline name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on pipeline descriptions to find by purpose or functionality."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the pipeline."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "tasks.name",
          "description": "Search on the names of tasks within the pipeline to find pipelines with specific processing steps."
        },
        {
          "name": "tasks.description",
          "description": "Search on task descriptions to find pipelines with tasks serving specific purposes."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find pipelines with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding pipelines by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified pipelines by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with pipeline."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with pipeline."
        }
      ]
    },
    {
      "entityType": "mlmodel",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on ML model name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on ML model name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on ML model name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable ML model name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on ML model descriptions to find by purpose or functionality."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the ML model."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "mlFeatures.name",
          "description": "Search on the names of features used by the ML model to find models using specific input features."
        },
        {
          "name": "mlFeatures.description",
          "description": "Search on feature descriptions to find models with features serving specific purposes."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find mlModels with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding mlModels by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified mlModels by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with mlmodel."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with mlmodel."
        }
      ]
    },
    {
      "entityType": "searchIndex",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on search index name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on search index name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on search index name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable search index name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on search index descriptions to find by purpose or functionality."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the search index."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "searchIndex.responseSchema.name",
          "description": "Search on the names of fields indexed in the search index."
        },
        {
          "name": "searchIndex.responseSchema.description",
          "description": "Search on field descriptions to find search indexes with fields serving specific purposes."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find searchIndexes with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding searchIndexes by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified searchIndexes by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with search index."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with search index."
        }
      ]
    },
    {
      "entityType": "container",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on container name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on container name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on container name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable container name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on container descriptions to find by purpose or content."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the container."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "dataModel.columns.name",
          "description": "Search on column names in the container's data model to find containers with specific data fields."
        },
        {
          "name": "dataModel.columns.name.keyword",
          "description": "Exact match on data model column names for precise field lookups."
        },
        {
          "name": "dataModel.columns.displayName",
          "description": "Search on human-readable column names in the data model."
        },
        {
          "name": "dataModel.columns.description",
          "description": "Search on column descriptions to find containers with fields serving specific purposes."
        },
        {
          "name": "dataModel.columns.children.name",
          "description": "Search on nested field names within complex data structures in the container."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find containers with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "tier.tagFQN.text",
          "description": "Search within parts of tier classification names. Enables finding containers by partial tier name."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified containers by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with container."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with container."
        }
      ]
    },
    {
      "entityType": "apiEndpoint",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on API endpoint name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on API endpoint name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on API endpoint name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable API endpoint name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on API endpoint descriptions to find by purpose or functionality."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the API endpoint."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "responseSchema.schemaFields.name",
          "description": "Search on field names in the API response schema to find endpoints returning specific data fields."
        },
        {
          "name": "responseSchema.schemaFields.name.keyword",
          "description": "Exact match on response schema field names for precise field lookups."
        },
        {
          "name": "responseSchema.schemaFields.description",
          "description": "Search on field descriptions in the response schema to find endpoints with fields serving specific purposes."
        },
        {
          "name": "responseSchema.schemaFields.children.name",
          "description": "Search on nested field names within complex response schema structures."
        },
        {
          "name": "responseSchema.schemaFields.children.keyword",
          "description": "Exact match on nested field names in the response schema."
        },
        {
          "name": "requestSchema.schemaFields.name",
          "description": "Search on field names in the API request schema to find endpoints accepting specific data fields."
        },
        {
          "name": "requestSchema.schemaFields.name.keyword",
          "description": "Exact match on request schema field names for precise field lookups."
        },
        {
          "name": "requestSchema.schemaFields.description",
          "description": "Search on field descriptions in the request schema to find endpoints with fields serving specific purposes."
        },
        {
          "name": "requestSchema.schemaFields.children.name",
          "description": "Search on nested field names within complex request schema structures."
        },
        {
          "name": "requestSchema.schemaFields.children.keyword",
          "description": "Exact match on nested field names in the request schema."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find apiEndPoint with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        },
        {
          "name": "certification.tagLabel.tagFQN.text",
          "description": "Search within parts of certification tag names. Useful for finding certified apiEndpoint by partial certification name."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with apiEndpoint."
        },
        {
          "name": "dataProducts.displayName.keyword",
          "description": "Exact match on dataProducts associated with apiEndpoint."
        }
      ]
    },
    {
      "entityType": "domain",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on domain name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on domain name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on domain name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable domain name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on domain descriptions to find by purpose or coverage."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the domain."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find domains with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        }
      ]
    },
    {
      "entityType": "dataProduct",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on data product name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on data product name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on data product name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable data product name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on data product descriptions to find by purpose or functionality."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the data product."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "tags.tagFQN.text",
          "description": "Search within parts of tag names. Use this to find data products with tags containing specific terms like 'Sensitive' or 'PII', regardless of the full tag hierarchy."
        }
      ]
    },
    {
      "entityType": "tag",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on tag name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on tag name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on tag name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable tag name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on tag descriptions to find by purpose or meaning."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the tag including classification hierarchy."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "classification.name",
          "description": "Search on the name of the classification that contains this tag to find tags within specific categories."
        }
      ]
    },
    {
      "entityType": "glossaryTerm",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on glossary term name for precise lookups."
        },
        {
          "name": "name",
          "description": "Standard text analysis on glossary term name with tokenization and stemming."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on glossary term name for finding with incomplete information."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable glossary term name."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for flexible searching."
        },
        {
          "name": "description",
          "description": "Full-text search on glossary term descriptions to find by purpose or meaning."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the glossary term including parent glossary."
        },
        {
          "name": "fqnParts",
          "description": "Search on parts of the hierarchical name for flexible matching."
        },
        {
          "name": "synonyms",
          "description": "Search on alternative terms/synonyms to find glossary terms with specific alternate names."
        },
        {
          "name": "synonyms.ngram",
          "description": "Partial matching on synonyms for flexible searching of alternate terms."
        },
        {
          "name": "glossary.name",
          "description": "Search on the name of the parent glossary to find terms within specific glossaries."
        },
        {
          "name": "glossary.displayName",
          "description": "Search on the display name of the parent glossary."
        },
        {
          "name": "domain.name.keyword",
          "description": "Exact match on domain associated with table."
        },
        {
          "name": "domain.displayName.keyword",
          "description": "Exact match on domain associated with glossary term."
        }
      ]
    },
    {
      "entityType": "default",
      "fields": [
        {
          "name": "name.keyword",
          "description": "Exact match on entity name for precise lookups. This field is useful when you need to find exact matches of entity names."
        },
        {
          "name": "name",
          "description": "Standard text analysis on entity name with tokenization and stemming. This provides more flexible matching than keyword searches."
        },
        {
          "name": "name.ngram",
          "description": "Partial matching on entity name using n-grams. This helps users find entities when they only remember part of the name."
        },
        {
          "name": "displayName",
          "description": "Standard text analysis on the human-readable entity name. This searches the user-friendly names assigned to entities."
        },
        {
          "name": "displayName.ngram",
          "description": "Partial matching on display name for more flexible searching with incomplete terms."
        },
        {
          "name": "description",
          "description": "Full-text search on entity descriptions to find by purpose, content or other documented details."
        },
        {
          "name": "fullyQualifiedName",
          "description": "Search on the complete hierarchical name of the entity including all parent components."
        },
        {
          "name": "fqnParts",
          "description": "Search on individual parts of the fully qualified name, allowing more flexible matching on hierarchy components."
        }
      ]
    }
  ],
  "allowedFieldValueBoosts": [
    {
      "entityType": "default",
      "fields": [
        {
          "name": "totalVotes",
          "description": "Total number of votes (upvotes minus downvotes) received by the entity. Universal metric for boosting community-endorsed entities."
        },
        {
          "name": "upVotes",
          "description": "Number of upvotes received by the entity. Universal metric for boosting positively rated entities."
        },
        {
          "name": "usageSummary.weeklyStats.count",
          "description": "Weekly usage count of an entity. Generic usage statistic that applies to various entity types."
        },
        {
          "name": "usageSummary.dailyStats.count",
          "description": "Daily usage count of an entity. Generic recent usage statistic."
        },
        {
          "name": "usageSummary.monthlyStats.count",
          "description": "Monthly usage count of an entity. Generic long-term usage statistic."
        }
      ]
    }
  ],
  "nlqConfiguration": {
    "promptTemplate": "You are an expert OpenSearch query generator specializing in the OpenMetadata schema. Your primary task is to translate natural language queries into precise OpenSearch JSON queries based *strictly* on the provided FIELD SUMMARY and INTERPRETATION GUIDELINES. Pay close attention to field descriptions to select the correct fields and query types.\n\n{{INSTRUCTIONS}}\n\nUSER QUERY: {{QUERY}}\n\nGenerate a valid OpenSearch JSON query object. Return ONLY the JSON query with no explanations.",
    "globalInstructions": [
      {
        "section": "QUERY GENERATION PROCESS",
        "content": "1. Analyze the USER QUERY to identify key entities, concepts (like domain, owner, tags, data product), and filter values.\n2. Consult the provided FIELD SUMMARY for the detected entity type.\n3. Select the MOST APPROPRIATE field(s) from the summary based on their descriptions.\n4. Determine the correct query type (`match` for flexible/text search, `term` for exact/keyword search) based on the field description and the guidelines below.\n5. Construct the OpenSearch query JSON using ONLY the selected fields and types.",
        "order": 1
      },
      {
        "section": "COMMON MISTAKES TO AVOID",
        "content": "1. Missing entityType filter when type is mentioned\n2. Using nested queries for non-nested fields\n3. Incorrect field names\n\nThe following examples show INCORRECT patterns followed by the CORRECT version:",
        "order": 5
      },
      {
        "section": "INCORRECT VS CORRECT PATTERNS",
        "content": "❌ INCORRECT: Tables query missing entityType filter\n{\"bool\": {\"must\": [{\"term\": {\"owners.name\": \"accounting\"}}]}}\n\n✅ CORRECT: Tables query with entityType filter\n{\"bool\": {\"must\": [{\"term\": {\"entityType\": \"table\"}}, {\"term\": {\"owners.name\": \"accounting\"}}]}}\n\n❌ INCORRECT: Using nested query for columns\n{\"bool\": {\"must\": [{\"nested\": {\"path\": \"columns\", \"query\": {\"match\": {\"columns.name\": \"SKU\"}}}}]}}\n\n✅ CORRECT: Direct match query for columns\n{\"bool\": {\"must\": [{\"term\": {\"entityType\": \"table\"}}, {\"match\": {\"columns.name\": \"SKU\"}}]}}\n\n❌ INCORRECT: Using owner.name (singular)\n{\"term\": {\"owner.name\": \"marketing\"}}\n\n✅ CORRECT: Using owners.name (plural)\n{\"term\": {\"owners.name\": \"marketing\"}}\n\n❌ INCORRECT: Using tags for tier\n{\"term\": {\"tags.tagFQN\": \"Tier1\"}}\n\n✅ CORRECT: Using tier.tagFQN with proper format\n{\"term\": {\"tier.tagFQN\": \"Tier.Tier1\"}}",
        "order": 6
      },
      {
        "section": "QUERY TYPE SELECTION (CRITICAL: Filtering vs. Searching)",
        "content": "- **FOR FILTERING by specific values** (e.g., domain name, owner name, tag FQN, tier, specific ID): ALWAYS prefer a `term` query on the corresponding `.keyword` field (e.g., `domain.displayName.keyword`, `owners.displayName.keyword`, `tags.tagFQN`, `tier.tagFQN`). Check the FIELD SUMMARY for available `.keyword` variants.\n- **FOR SEARCHING within text** (e.g., descriptions, general names where partial matches are okay): Use a `match` query on the base text field (e.g., `description`, `name`).\n- Assume `.keyword` fields with normalizers handle case-insensitivity for `term` queries.",
        "order": 10
      },
      {
        "section": "CRITICAL FIELD CORRECTIONS",
        "content": "1. Use 'owners.name' (plural) NOT 'owner.name' (singular)\n2. Use 'tags.tagFQN' NOT just 'tags' for regular tags\n3. Use 'tier.tagFQN' NOT 'tags.tagFQN' for tier-related queries\n4. Top-level fields like 'owners', 'tags', 'tier' do NOT need nested queries\n5. Only use nested queries for 'columns', 'charts', 'tasks', etc.",
        "order": 11
      },
      {
        "section": "AMBIGUITY RESOLUTION",
        "content": "- If the user query mentions 'domain', verify if the FIELD SUMMARY lists a specific 'domain' field (like `domain.displayName.keyword`). If yes, use it. If not, or if context suggests otherwise, reconsider. DO NOT default to `service.name` for business domains.\n- If the user query mentions 'data product', verify if the FIELD SUMMARY lists a specific 'data product' field (like `dataProducts.displayName`). If yes, use it.\n- For general terms, use the field description in the FIELD SUMMARY to determine the best fit (e.g., prefer `displayName` for user-friendly name searches over raw `name`).",
        "order": 14
      },
      {
        "section": "ENTITY TYPE FILTERING",
        "content": "When a user specifies a particular entity type (e.g., 'tables', 'dashboards', 'pipelines'):\n1. ALWAYS add a term filter for 'entityType' with the SINGULAR form\n2. For example: If query mentions 'tables', add {\"term\": {\"entityType\": \"table\"}} (not 'tables')\n3. For example: If query mentions 'dashboards', add {\"term\": {\"entityType\": \"dashboard\"}} (not 'dashboards')\n4. This MUST be combined with any other filters (like tags, owners, etc.) using a 'must' clause",
        "order": 14
      },
      {
        "section": "TIER TAG FORMATTING",
        "content": "When querying by tier, ALWAYS follow these formats:\n- For Tier 1: \"tier.tagFQN\": \"Tier.Tier1\" (not \"tier1\" or \"Tier1\")\n- For Tier 2: \"tier.tagFQN\": \"Tier.Tier2\" (not \"tier2\" or \"Tier2\")\n- For Tier 3: \"tier.tagFQN\": \"Tier.Tier3\" (not \"tier3\" or \"Tier3\")",
        "order": 15
      },
      {
        "section": "QUERY PATTERNS",
        "content": "1. For text fields: {\"match\": {\"description\": \"customer data\"}}\n2. For keyword fields: {\"term\": {\"owners.name\": \"marketing\"}}\n3. For nested fields: {\"nested\": {\"path\": \"columns\", \"query\": {\"match\": {\"columns.name\": \"address\"}}}}\n\nIMPORTANT: Return a valid JSON query object. Do NOT wrap it in a 'query' object - this will be done automatically.",
        "order": 20
      }
    ],

    "entitySpecificInstructions": [
      {
        "entityType": "table",
        "sections": [
          {
            "section": "TABLE FIELDS",
            "content": "- name (text): Use match query for fuzzy text search\n  Example: {\"match\": {\"name\": \"customer\"}}\n\n- name.keyword (exact): Use term query for exact matching\n  Example: {\"term\": {\"name.keyword\": \"customer_orders\"}}\n\n- description (text): Use match query for content search\n  Example: {\"match\": {\"description\": \"sales data\"}}\n\n- owners.name (keyword): Use term query for exact matching\n  Example: {\"term\": {\"owners.name\": \"marketing\"}}\n\n- tier.tagFQN (keyword): Use term query for tier classification\n  Example: {\"term\": {\"tier.tagFQN\": \"Tier.Tier1\"}}\n\n- tags.tagFQN (keyword): Use term query for tags\n  Example: {\"term\": {\"tags.tagFQN\": \"PII.Sensitive\"}}\n\n- columns.name (keyword): Use direct match queries for columns\n  Example: {\"match\": {\"columns.name\": \"address\"}}\n  ⚠️ IMPORTANT: Do NOT use nested query syntax for columns\n\n- service.name, database.name, databaseSchema.name (keywords): Use term queries\n  Example: {\"term\": {\"service.name\": \"snowflake\"}}",
            "order": 10
          }
        ]
      },
      {
        "entityType": "dashboard",
        "sections": [
          {
            "section": "DASHBOARD FIELDS",
            "content": "- charts.name (nested): Use nested query for searching charts\n  Example: {\"nested\": {\"path\": \"charts\", \"query\": {\"match\": {\"charts.name\": \"revenue\"}}}}\n\n- service.name: Use term query for the dashboard service\n  Example: {\"term\": {\"service.name\": \"looker\"}}\n\n- owners.name: Use term query for ownership\n  Example: {\"term\": {\"owners.name\": \"marketing\"}}",
            "order": 10
          }
        ]
      }
    ],

    "examples": [
      {
        "query": "tables owned by marketing",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"entityType\": \"table\"}}, {\"term\": {\"owners.name\": \"marketing\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "tables with customer data",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"entityType\": \"table\"}}, {\"match\": {\"columns.name\": \"customer\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "tables with column SKU",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"entityType\": \"table\"}}, {\"match\": {\"columns.name\": \"SKU\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "tables owned by marketing",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"owners.name\": \"marketing\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "tables with customer data",
        "esQuery": "{\"bool\": {\"must\": [{\"nested\": {\"path\": \"columns\", \"query\": {\"match\": {\"columns.name\": \"customer\"}}}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "tables with Tier1 classification",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"tier.tagFQN\": \"Tier.Tier1\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "tables tagged with tier1 or tier2",
        "esQuery": "{\"bool\": {\"should\": [{\"term\": {\"tier.tagFQN\": \"Tier.Tier1\"}}, {\"term\": {\"tier.tagFQN\": \"Tier.Tier2\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "find all tier1 and tier2 tables",
        "esQuery": "{\"bool\": {\"should\": [{\"term\": {\"tier.tagFQN\": \"Tier.Tier1\"}}, {\"term\": {\"tier.tagFQN\": \"Tier.Tier2\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "tables with PII.Sensitive tag",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"tags.tagFQN\": \"PII.Sensitive\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "tables where business owner is infrastructure",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"entityType\": \"table\"}}, {\"term\": {\"extension.businessOwner.name\": \"infrastructure\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "find tables with data steward John",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"entityType\": \"table\"}}, {\"term\": {\"extension.dataSteward.name\": \"John\"}}]}}",
        "entityTypes": ["table"]
      },
      {
        "query": "dashboards with support team sales",
        "esQuery": "{\"bool\": {\"must\": [{\"term\": {\"entityType\": \"dashboard\"}}, {\"term\": {\"extension.supportTeam.name\": \"sales\"}}]}}",
        "entityTypes": ["dashboard"]
      },
      {
        "description": "Find tables with no tags:",
        "query": "tables with no tags",
        "esQuery": "{\"bool\":{\"must\":[{\"term\":{\"entityType\":\"table\"}},{\"term\":{\"tags.length\":0}}]}}"
      },
      {
        "description": "Find tables with no description:",
        "query": "tables without description",
        "esQuery": "{\"bool\":{\"must\":[{\"term\":{\"entityType\":\"table\"}},{\"term\":{\"description\":\"\"}}]}}"
      }
    ],
    "mappingConfiguration": {
      "includeMappings": true,
      "mappingSection": {
        "title": "INDEX MAPPINGS",
        "description": "Below are the Elasticsearch mappings for the relevant indices. Use these to understand the document structure:",
        "order": 5
      },
      "fieldInterpretations": [
        {
          "pattern": "properties",
          "explanation": "Fields with 'properties' are objects. Only use nested queries when explicitly marked as 'type: nested'."
        },
        {
          "pattern": "tags.tagFQN",
          "explanation": "The 'tags' field is NOT nested despite having properties. Use direct term queries: {\"term\": {\"tags.tagFQN\": \"value\"}}"
        },
        {
          "pattern": "owners.name",
          "explanation": "The 'owners' field is NOT nested despite having properties. Use direct term queries: {\"term\": {\"owners.name\": \"value\"}}"
        },
        {
          "pattern": "tier.tagFQN",
          "explanation": "The 'tier' field is NOT nested despite having properties. Use direct term queries: {\"term\": {\"tier.tagFQN\": \"value\"}}"
        },
        {
          "pattern": "columns",
          "explanation": "The 'columns' field is NOT nested despite having properties. Use direct match queries: {\"match\": {\"columns.name\": \"value\"}}"
        },
        {
          "pattern": "extension",
          "explanation": "The 'extension' field contains custom properties. Query like: {\"term\": {\"extension.propertyName\": \"value\"}}"
        },
        {
          "pattern": "customProperty",
          "explanation": "Custom properties are stored under the 'extension' field. Always use the pattern 'extension.propertyName' in queries."
        }
      ]
    },
    "extensionFieldGuidelines": {
      "header": "EXTENSION FIELD STRUCTURE GUIDELINES:",
      "sections": [
        {
          "title": "For EntityReference type custom properties:",
          "guidelines": [
            "Use .name suffix for text searches: extension.businessOwner.name",
            "Use .id suffix for ID searches: extension.businessOwner.id",
            "Use .displayName for display name searches: extension.businessOwner.displayName"
          ]
        },
        {
          "title": "For array type custom properties:",
          "guidelines": [
            "Use [] notation to indicate arrays: extension.tags[].name"
          ]
        },
        {
          "title": "For simple type custom properties (string, integer, etc.):",
          "guidelines": [
            "Access directly: extension.priority"
          ]
        }
      ],
      "examples": [
        {
          "description": "Tables with business owner 'infrastructure':",
          "query": "tables where business owner is infrastructure",
          "esQuery": "{\"term\": {\"extension.businessOwner.name\": \"infrastructure\"}}"
        },
        {
          "description": "Dashboards with data steward 'John':",
          "query": "dashboards with data steward John",
          "esQuery": "{\"term\": {\"extension.dataSteward.name\": \"John\"}}"
        },
        {
          "description": "Tables with support team 'sales':",
          "query": "tables with support team sales",
          "esQuery": "{\"term\": {\"extension.supportTeam.name\": \"sales\"}}"
        },
        {
          "description": "Tables with any custom property containing 'marketing':",
          "query": "tables with marketing in any field",
          "esQuery": "{\"multi_match\": {\"query\": \"marketing\", \"fields\": [\"extension.*\"]}}"
        }
      ]
    }
  }
}